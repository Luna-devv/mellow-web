import next from "@next/eslint-plugin-next";
import stylistic from "@stylistic/eslint-plugin";
import eslintPluginImport from "eslint-plugin-import-x";
import react from "eslint-plugin-react";
import reactCompiler from "eslint-plugin-react-compiler";
import reactHooks from "eslint-plugin-react-hooks";
import simpleImportSort from "eslint-plugin-simple-import-sort";
import eslintPluginUnicorn from "eslint-plugin-unicorn";
import tseslint from "typescript-eslint";

export default tseslint.config(
    ...tseslint.configs.recommended,
    {
        files: ["**/*.ts", "**/*.tsx"],
        ignores: ["node_modules", ".next"],
        languageOptions: {
            parser: tseslint.parser,
            parserOptions: {
                project: "./tsconfig.json",
                tsconfigRootDir: import.meta.dirname,
                warnOnUnsupportedTypeScriptVersion: false
            }
        },
        plugins: {
            react,
            "react-hooks": reactHooks,
            "@next/next": next,
            "react-compiler": reactCompiler,

            "@stylistic": stylistic,
            "@typescript-eslint": tseslint.plugin,
            import: eslintPluginImport,
            "simple-import-sort": simpleImportSort,
            unicorn: eslintPluginUnicorn
        },
        rules: {
            ...react.configs.recommended.rules,
            ...react.configs['jsx-runtime'].rules,
            ...reactHooks.configs.recommended.rules,
            ...next.configs.recommended.rules,
            ...next.configs["core-web-vitals"].rules,

            // Fixes
            "react/prop-types": "off",
            "react-hooks/exhaustive-deps": "off",

            // stylistic Rules
            "@stylistic/array-bracket-newline": ["error", "consistent"],
            "@stylistic/array-bracket-spacing": "error",
            "@stylistic/array-element-newline": ["error", "consistent"],
            "@stylistic/arrow-parens": ["error", "always"],
            "@stylistic/block-spacing": "error",
            "@stylistic/brace-style": "error",
            "@stylistic/comma-dangle": ["error"],
            "@stylistic/comma-spacing": "error",
            "@stylistic/comma-style": "error",
            "@stylistic/computed-property-spacing": "error",
            "@stylistic/dot-location": ["error", "property"],
            "@stylistic/eol-last": ["error", "never"],
            "@stylistic/function-call-argument-newline": ["error", "consistent"],
            "@stylistic/function-call-spacing": "error",
            "@stylistic/indent": "error",
            "@stylistic/key-spacing": "error",
            "@stylistic/keyword-spacing": "error",
            "@stylistic/member-delimiter-style": ["error", { singleline: { requireLast: true } }],
            "@stylistic/new-parens": "error",
            "@stylistic/no-extra-semi": "error",
            "@stylistic/no-floating-decimal": "error",
            "@stylistic/no-multi-spaces": "error",
            "@stylistic/no-multiple-empty-lines": ["error", { max: 1, maxBOF: 0, maxEOF: 0 }],
            "@stylistic/no-trailing-spaces": "error",
            "@stylistic/no-whitespace-before-property": "error",
            "@stylistic/object-curly-newline": "error",
            "@stylistic/object-curly-spacing": ["error", "always"],
            "@stylistic/rest-spread-spacing": "error",
            "@stylistic/quote-props": ["error", "as-needed"],
            "@stylistic/quotes": "error",
            "@stylistic/semi": "error",
            "@stylistic/semi-spacing": "error",
            "@stylistic/semi-style": "error",
            "@stylistic/space-before-blocks": "error",
            "@stylistic/space-before-function-paren": ["error", { named: "never" }],
            "@stylistic/space-in-parens": "error",
            "@stylistic/space-infix-ops": "error",
            "@stylistic/space-unary-ops": "error",
            "@stylistic/spaced-comment": "error",
            "@stylistic/switch-colon-spacing": "error",
            "@stylistic/template-curly-spacing": "error",
            "@stylistic/template-tag-spacing": "error",
            "@stylistic/type-annotation-spacing": "error",
            "@stylistic/type-generic-spacing": "error",
            "@stylistic/type-named-tuple-spacing": "error",
            "@stylistic/max-statements-per-line": ["error", { max: 1 }],
            "@stylistic/multiline-comment-style": ["error", "separate-lines"],
            "@stylistic/no-mixed-spaces-and-tabs": "error",
            "@stylistic/no-tabs": "error",
            "@stylistic/object-property-newline": ["error", { allowAllPropertiesOnSameLine: true }],
            "@stylistic/one-var-declaration-per-line": "error",
            "@stylistic/wrap-iife": ["error", "inside"],
            // "@typescript-eslint/no-floating-promises": "error",
            "@typescript-eslint/no-explicit-any": "error",
            "@typescript-eslint/adjacent-overload-signatures": "error",
            "@typescript-eslint/array-type": "error",
            "@typescript-eslint/ban-ts-comment": "error",
            "@typescript-eslint/no-wrapper-object-types": "error",
            "@typescript-eslint/no-empty-object-type": "error",
            "@typescript-eslint/no-unsafe-function-type": "error",
            "@typescript-eslint/class-literal-property-style": "error",
            "@typescript-eslint/consistent-type-definitions": "error",
            "@typescript-eslint/consistent-type-exports": ["error", { fixMixedExportsWithInlineTypeSpecifier: true }],
            "@typescript-eslint/consistent-type-imports": ["error", { fixStyle: "inline-type-imports" }],
            // "@typescript-eslint/member-ordering": ["error", {
            //     default: {
            //         memberTypes: [
            //             "call-signature",
            //             "signature",
            //             "constructor",
            //             ["static-accessor", "static-field", "static-get", "static-method", "static-set"],
            //             ["accessor", "get", "method", "set"],
            //             "field"
            //         ],
            //         order: "alphabetically-case-insensitive"
            //     }
            // }],
            "@typescript-eslint/consistent-type-imports": "error",
            "@typescript-eslint/method-signature-style": "error",
            "@typescript-eslint/naming-convention": ["error", { selector: "typeLike", format: ["PascalCase"] }],
            "@typescript-eslint/no-duplicate-enum-values": "error",
            "@typescript-eslint/no-duplicate-type-constituents": "error",
            "@typescript-eslint/no-empty-interface": "error",
            "@typescript-eslint/no-import-type-side-effects": "error",
            "@typescript-eslint/no-invalid-void-type": "error",
            "@typescript-eslint/no-misused-new": "error",
            "@typescript-eslint/no-redundant-type-constituents": "error",
            "@typescript-eslint/no-require-imports": "error",
            "@typescript-eslint/no-unnecessary-qualifier": "error",
            "@typescript-eslint/no-unnecessary-type-arguments": "error",
            "@typescript-eslint/no-unnecessary-type-constraint": "error",
            "@typescript-eslint/no-unsafe-declaration-merging": "error",
            "@typescript-eslint/no-unused-vars": ["error", {
                args: "all",
                argsIgnorePattern: "^_",
                destructuredArrayIgnorePattern: "^_",
                varsIgnorePattern: "^_"
            }],
            "@typescript-eslint/no-useless-empty-export": "error",
            "@typescript-eslint/prefer-enum-initializers": "error",
            "@typescript-eslint/prefer-function-type": "error",
            "@typescript-eslint/triple-slash-reference": "error",
            "@typescript-eslint/unified-signatures": "error",
            "@typescript-eslint/consistent-generic-constructors": "error",
            "@typescript-eslint/consistent-indexed-object-style": "error",
            "@typescript-eslint/no-unused-expressions": "error",
            "@typescript-eslint/require-await": "error",
            "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
            "@typescript-eslint/array-type": "error",
            "@typescript-eslint/prefer-as-const": "error",
            "@typescript-eslint/prefer-find": "error",
            "@typescript-eslint/prefer-for-of": "error",
            "@typescript-eslint/prefer-includes": "error",
            "@typescript-eslint/prefer-reduce-type-parameter": "error",
            "@typescript-eslint/prefer-return-this-type": "error",
            "@typescript-eslint/prefer-string-starts-ends-with": "error",
            "@typescript-eslint/prefer-ts-expect-error": "error",
            "@typescript-eslint/restrict-plus-operands": "error",
            "@typescript-eslint/no-confusing-void-expression": ["error", { ignoreArrowShorthand: true }],
            "@typescript-eslint/no-meaningless-void-operator": "error",
            "@typescript-eslint/no-mixed-enums": "error",
            "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
            "@typescript-eslint/no-unnecessary-type-assertion": "error",
            "@typescript-eslint/unbound-method": "error",
            "import/extensions": "off", // changed
            "import/first": "error",
            "import/newline-after-import": ["error", { considerComments: true }],
            "import/no-absolute-path": "error",
            "import/no-duplicates": "error",
            "import/no-empty-named-blocks": "error",
            "import/no-extraneous-dependencies": "error",
            "import/no-relative-packages": "error",
            "import/no-unused-modules": "error",
            "import/no-self-import": "error",
            "import/no-useless-path-segments": "error",
            "import/no-cycle": ["error", { maxDepth: Infinity }],
            "simple-import-sort/exports": "error",
            "simple-import-sort/imports": ["error", { groups: [["^\\u0000", "^[^~./]"], ["^~"], ["^\\./", "^\\.\\./"]] }],
            "unicorn/escape-case": "error",
            // "unicorn/filename-case": ["error", { cases: { pascalCase: true, snakeCase: true, kebabCase: true } }],
            "unicorn/no-hex-escape": "error",
            "unicorn/no-zero-fractions": "error",
            "unicorn/number-literal-case": "error",
            "unicorn/numeric-separators-style": ["error", { number: { minimumDigits: 0 } }],
            "unicorn/prefer-export-from": "error",
            "unicorn/better-regex": "error",
            "unicorn/catch-error-name": "error",
            "unicorn/consistent-function-scoping": ["error", { checkArrowFunctions: false }],
            "unicorn/empty-brace-spaces": "error",
            "unicorn/error-message": "error",
            "unicorn/new-for-builtins": "error",
            "unicorn/no-array-callback-reference": "error",
            "unicorn/no-array-for-each": "error",
            "unicorn/no-array-push-push": "error",
            "unicorn/no-console-spaces": "error",
            "unicorn/no-for-loop": "error",
            "unicorn/no-instanceof-array": "error",
            "unicorn/no-negated-condition": "error",
            "unicorn/no-new-array": "error",
            "unicorn/no-new-buffer": "error",
            "unicorn/no-object-as-default-parameter": "error",
            "unicorn/no-static-only-class": "error",
            "unicorn/no-thenable": "error",
            "unicorn/no-this-assignment": "error",
            "unicorn/no-unnecessary-await": "error",
            "unicorn/no-unreadable-array-destructuring": "error",
            "unicorn/no-unreadable-iife": "error",
            "unicorn/no-useless-length-check": "error",
            "unicorn/no-useless-promise-resolve-reject": "error",
            "unicorn/no-useless-spread": "error",
            "unicorn/no-useless-switch-case": "error",
            "unicorn/prefer-array-find": "error",
            "unicorn/prefer-array-flat": "error",
            "unicorn/prefer-array-flat-map": "error",
            "unicorn/prefer-array-index-of": "error",
            "unicorn/prefer-array-some": "error",
            "unicorn/prefer-at": "error",
            "unicorn/prefer-date-now": "error",
            "unicorn/prefer-default-parameters": "error",
            "unicorn/prefer-includes": "error",
            "unicorn/prefer-logical-operator-over-ternary": "error",
            "unicorn/prefer-modern-math-apis": "error",
            "unicorn/prefer-negative-index": "error",
            "unicorn/prefer-number-properties": "error",
            "unicorn/prefer-object-from-entries": "error",
            "unicorn/prefer-optional-catch-binding": "error",
            "unicorn/prefer-prototype-methods": "error",
            "unicorn/prefer-regexp-test": "error",
            "unicorn/prefer-set-has": "error",
            "unicorn/prefer-spread": "error",
            "unicorn/prefer-string-slice": "error",
            "unicorn/prefer-string-starts-ends-with": "error",
            "unicorn/prefer-string-trim-start-end": "error",
            "unicorn/prefer-switch": "error",
            "unicorn/prefer-type-error": "error",
            "unicorn/require-number-to-fixed-digits-argument": "error",
            "unicorn/throw-new-error": "error",
            "no-dupe-else-if": "error",
            "no-template-curly-in-string": "error",
            "no-unexpected-multiline": "error",
            "no-unreachable": "error",
            "no-unreachable-loop": "error",
            "default-case-last": "error",
            "dot-notation": "error",
            eqeqeq: "error",
            // "new-cap": "error",
            // "no-console": "error",
            "no-empty": "error",
            // "no-nested-ternary": "error",
            "no-unneeded-ternary": "error",
            "no-var": "error",
            "for-direction": "error",
            "no-constant-condition": "error",
            "no-constructor-return": "error",
            "no-duplicate-case": "error",
            "no-else-return": "error",
            "no-implicit-coercion": "error",
            "no-lonely-if": "error",
            "no-return-assign": "error",
            "no-self-compare": "error",
            "no-throw-literal": "error",
            "no-undef-init": "error",
            "no-unused-expressions": "off",
            "no-useless-concat": "error",
            "no-useless-return": "error",
            "object-shorthand": "error",
            "one-var": ["error", "never"],
            "prefer-arrow-callback": "error",
            "prefer-const": "error",
            "prefer-destructuring": ["error", { object: true, array: false }],
            "prefer-object-spread": "error",
            "prefer-rest-params": "error",
            "prefer-spread": "error",
            radix: "error",
            yoda: "error"
        },
        settings: {
            react: {
                version: "detect", // Automatically detects the React version
            },
        }
    },
    {
        ignores: ["node_modules", ".next", "**/gt4.ts", "next-env.d.ts"]
    }
)
